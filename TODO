
Todo:
  ✔ breakpoints et explain bootstrap 4 and grids @done(18-11-23 09:09)
  ✔ grids system and gutters @done(18-11-23 09:09)
  ✔ life cycle hooks @done(18-11-23 09:09)

  ✔ Module 1 : Concepts de base du JavaScript @done(18-11-23 09:18)
  ✔ Principes et fonctionnements @done(18-11-19 17:03)
  ✔ Variables et types de données @done(18-11-21 09:18)
  ✔ Opérateurs @done(18-11-23 09:17)
  ✔ Instructions @done(18-11-23 09:17)
  ✔ Structures de contrôles (conditions, boucles...) @done(18-11-21 09:18)
  ✔ Définition et utilisation de fonctions @done(18-11-23 09:19)
  ✘ Objets prédéfinis(document, window ...) @cancelled(18-11-23 09:18)
  ✘ Contrôle de saisies et traitement de formulaires @cancelled(18-11-23 09:18)
  ✘ Gestion des fenêtres (ouverture, fermeture, communication) @cancelled(18-11-23 09:18)
  ✘ Boîtes de dialogue @cancelled(18-11-23 09:18)
  ✔ Atelier : apprendre à valider un formulaire @done(18-11-23 09:09)

  ✔ Module 2 : ANGULAR 5 - Introduction @done(18-11-21 12:56)
  ✔ Développement d'applications riches @done(18-11-19 17:03)
  ✔ Panorama des frameworks disponibles @done(18-11-19 17:03)
  ✔ Présentation de l'environnement de développement NodeJS @done(18-11-19 17:03)
  ✔ Atelier : Installation et mise en route d'un projet Angular @done(18-11-19 17:03)

  ✔ Module 3 : ES2015 @done(18-11-23 09:15)
  ✔ Lien entre Angular et ES2015/TS @done(18-11-19 17:03)
  ✔ Classes, fondamentaux: constructeur, méthode et gestion de contexte @done(18-11-21 12:56)
  ✔ Classes, avancés: héritage, méthodes statiques @done(18-11-23 09:10)
  ✔ Opérateurs set et get @done(18-11-21 12:56)
  ✔ Littéraux de Gabarits @done(18-11-23 09:10)
  ✔ Fonctions fléchées @done(18-11-23 09:15) (arrow function)
  ✔ Variables de bloc @done(18-11-23 09:15)

  ✔ Module 4 : Typescript @done(18-11-21 12:56)
  ✔ Déclaration de type @done(18-11-21 12:56)
  ✔ Interface et formes @done(18-11-21 12:56)
  ✔ Décorateurs @done(18-11-21 12:56)

  ✔ Module 5 : Première application @done(18-11-23 09:14)
  ✔ Dépendances d'Angular @done(18-11-23 09:10)
  ✔ Déclarer un composant @done(18-11-19 17:04)
  ✔ Ajouter un gabarit @done(18-11-19 17:04)
  ✔ Lancer l'application avec un serveur NodeJS @done(18-11-19 17:04)
  ✔ Re-compiler automatiquement à chaque modification: le veilleur @done(18-11-19 17:04)
  ✔ Ajouter des données, créer ses classes de modèle @done(18-11-21 12:57)
  ✔ Lier une donnée au gabarit, expressions et opérateur «moustache» @done(18-11-23 09:14)
  ✔ Gérer des collections, directive *ngFor @done(18-11-21 12:57)
  ✔ Atelier : Création d'une première application @done(18-11-21 12:57)

  ✔ Module 6 : Formulaire @done(18-11-23 09:17)
  ✔ Liaison des événements d'entrée @done(18-11-23 09:10)
  ✔ L'objet $event @done(18-11-21 12:57)
  ✔ Variable de référence de gabarit @done(18-11-23 09:10)
  ✔ Créaton de formulaire avec la syntaxe de gabarit @done(18-11-23 09:10)
  ✔ Liaison de données à double sens @done(18-11-23 09:10)
  ✔ Suivre et valider les saisies utilisateur avec ngControl @done(18-11-23 09:13)
  ✔ Soumettre le formulaire avec ngSubmit @done(18-11-23 09:11)
  ✔ Atelier : Gestion des entrées utilisateurs @done(18-11-23 09:11)

  ✔ Module 7 : Injection de dépendances @done(18-11-23 09:17)
  ✔ Principes de DI @done(18-11-21 12:57)
  ✔ Configurer l'injecteur @done(18-11-23 09:12)
  ✔ Enregistrer des fournisseurs dans un composant @done(18-11-23 09:12)
  ✔ Création de l'injecteur @done(18-11-23 09:12)
  ✔ Différents types de fournisseurs: classe, valeur, fabrique... @done(18-11-23 09:12)
  ✔ Atelier : Architecturer notre application sous forme d'une organisation de services @done(18-11-21 12:58)

  ✔ Module 8 : La Syntaxe de gabarit en détail @done(18-11-23 09:17)
  ✔ Interpollation, expression et instruction @done(18-11-23 09:12)
  ✔ Syntaxe de liaison: sens unique, double sens, cibles de liaison @done(18-11-23 09:12)
  ✔ Directives natives: NgClass, NgStyle, NgIf, NgSwitch, NgFor @done(18-11-23 09:12)
  ✔ Propriétés d'entrée et de sortie @done(18-11-23 09:12)
  ✔ Opérateurs d'expression de gabarit «|» et «?.» @done(18-11-23 09:12)

  ✔ Module 9 : Le client HTTP @done(18-11-23 15:35)
  ✔ Principe de communication asynchrone @done(18-11-23 15:34)
  ✔ Récupérer des données avec http.get @done(18-11-23 15:34)
  ✔ Observable RxJS @done(18-11-23 09:12)
  ✔ Prise en charge du transport JSON @done(18-11-23 15:34)
  ✔ Gestion des erreurs @done(18-11-23 09:12)
  ✔ Envoi de données au serveur @done(18-11-23 15:34)
  ✔ Fonctionnement des promesses @done(18-11-23 09:12)
  ✔ Sources externes: CORS @done(18-11-23 15:34)
  ✔ Atelier : Mettre en place un client d'API ReST @done(18-11-23 15:34)

  ✔ Module 10 : Routage @done(18-11-23 09:13)
  ✔ Routage côté client, hashtag et HTML5 @done(18-11-21 12:58)
  ✔ Configuration des routes sur un composant @done(18-11-21 12:58)
  ✔ Récupérer des paramètres de routes @done(18-11-23 09:13)
  ✔ Stratégie de routes @done(18-11-23 09:13)
  ✔ Routes imbriquées @done(18-11-21 12:58)
  ✔ Atelier : Mettre en place une application multi-vues @done(18-11-23 09:13)

  ✔ Module 11 : Tester l'application @done(18-11-23 15:34)
  ✔ Fondamentaux des tests avec Jasmine @done(18-11-23 15:34)
  ✔ Automatisation des tests avec Karma @done(18-11-23 15:34)
  ✔ Tester des composants simples @done(18-11-23 15:34)
  ✔ Tester des composants avec services asynchrones @done(18-11-23 15:34)
  ✔ Tester des formulaires @done(18-11-23 15:34)
  ✔ Atelier : Multiples exemples de tests @done(18-11-23 15:34)
